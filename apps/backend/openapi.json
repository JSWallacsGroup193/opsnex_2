{
  "openapi": "3.0.0",
  "paths": {
    "/health": {
      "get": {
        "operationId": "HealthController_get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "status": "ok"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "monitoring"
        ]
      }
    },
    "/metrics": {
      "get": {
        "operationId": "MetricsController_metrics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "uptime": 12345,
                    "timestamp": "2025-10-18T00:00:00Z"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "monitoring"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "operationId": "MeController_getMe",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admin/dashboard": {
      "get": {
        "operationId": "AdminController_getDashboard",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "operationId": "AdminController_getAllUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "AdminController_createUser",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/admin/users/{id}": {
      "get": {
        "operationId": "AdminController_getUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "AdminController_updateUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "AdminController_deleteUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admin/users/{id}/activate": {
      "post": {
        "operationId": "AdminController_activateUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/admin/users/{id}/deactivate": {
      "post": {
        "operationId": "AdminController_deactivateUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/admin/users/{id}/roles": {
      "put": {
        "operationId": "AdminController_updateUserRoles",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admin/roles": {
      "get": {
        "operationId": "AdminController_getAllRoles",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "AdminController_createRole",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/admin/roles/{id}": {
      "get": {
        "operationId": "AdminController_getRole",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "AdminController_updateRole",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "AdminController_deleteRole",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admin/roles/{id}/permissions": {
      "put": {
        "operationId": "AdminController_updateRolePermissions",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admin/permissions": {
      "get": {
        "operationId": "AdminController_getAllPermissions",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "AdminController_createPermission",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/admin/permissions/{id}": {
      "put": {
        "operationId": "AdminController_updatePermission",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "AdminController_deletePermission",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admin/tenants": {
      "get": {
        "operationId": "AdminController_getAllTenants",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admin/tenants/{id}": {
      "get": {
        "operationId": "AdminController_getTenant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "AdminController_updateTenant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admin/tenants/{id}/activate": {
      "post": {
        "operationId": "AdminController_activateTenant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/admin/tenants/{id}/deactivate": {
      "post": {
        "operationId": "AdminController_deactivateTenant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/users/profile": {
      "put": {
        "operationId": "UsersController_updateProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/users/password": {
      "put": {
        "operationId": "UsersController_changePassword",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/work-orders/stats": {
      "get": {
        "operationId": "WorkOrderController_getStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/work-orders": {
      "get": {
        "operationId": "WorkOrderController_findAll",
        "parameters": [
          {
            "name": "equipmentId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "WorkOrderController_create",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/work-orders/{id}": {
      "get": {
        "operationId": "WorkOrderController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "WorkOrderController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/work-orders/{id}/status": {
      "put": {
        "operationId": "WorkOrderController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/barcodes/{text}": {
      "get": {
        "operationId": "BarcodeController_getBarcode",
        "parameters": [
          {
            "name": "text",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/crm/accounts": {
      "get": {
        "operationId": "CrmController_getAccounts",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "CrmController_createAccount",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/crm/accounts/{id}": {
      "get": {
        "operationId": "CrmController_getAccount",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "CrmController_updateAccount",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/crm/contacts": {
      "get": {
        "operationId": "CrmController_getContacts",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "CrmController_createContact",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/crm/contacts/{id}": {
      "get": {
        "operationId": "CrmController_getContact",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "CrmController_updateContact",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/crm/leads": {
      "get": {
        "operationId": "CrmController_getLeads",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "CrmController_createLead",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/crm/leads/{id}": {
      "put": {
        "operationId": "CrmController_updateLead",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/crm/notes/contact/{contactId}": {
      "get": {
        "operationId": "CrmController_getNotes",
        "parameters": [
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/crm/notes": {
      "post": {
        "operationId": "CrmController_createNote",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/dispatch": {
      "post": {
        "operationId": "DispatchController_create",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/dispatch/{id}": {
      "put": {
        "operationId": "DispatchController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "DispatchController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/dispatch/technician/{id}": {
      "get": {
        "operationId": "DispatchController_getForTechnician",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/dispatch/all": {
      "get": {
        "operationId": "DispatchController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/inventory/skus": {
      "get": {
        "operationId": "InventoryController_getSKUs",
        "parameters": [
          {
            "name": "q",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": {
              "default": 50
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "InventoryController_createSKU",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSkuDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/inventory/skus/{id}": {
      "get": {
        "operationId": "InventoryController_getSKU",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "InventoryController_updateSKU",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "InventoryController_deleteSKU",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/inventory/stock-ledger/{skuId}": {
      "get": {
        "operationId": "InventoryController_getStockLedger",
        "parameters": [
          {
            "name": "skuId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/inventory/stock-ledger": {
      "post": {
        "operationId": "InventoryController_createStockLedgerEntry",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/inventory/warehouses": {
      "get": {
        "operationId": "InventoryController_getWarehouses",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "InventoryController_createWarehouse",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/inventory/bins": {
      "get": {
        "operationId": "InventoryController_getBins",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "InventoryController_createBin",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/inventory/skus/{id}/onhand": {
      "get": {
        "operationId": "InventoryController_getOnHand",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "onHand": 42
                  }
                }
              }
            }
          }
        },
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/purchasing": {
      "get": {
        "operationId": "PurchasingController_getAll",
        "parameters": [
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": {
              "default": 50
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "purchasing"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "PurchasingController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "purchasing"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/purchasing/{id}": {
      "get": {
        "operationId": "PurchasingController_getOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "purchasing"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/purchasing/{id}/receive": {
      "put": {
        "operationId": "PurchasingController_receive",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "purchasing"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/purchasing/{id}/cancel": {
      "put": {
        "operationId": "PurchasingController_cancel",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "purchasing"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/forecast": {
      "post": {
        "operationId": "ForecastController_run",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "operationId": "ForecastController_get",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/forecast/sku/{skuId}": {
      "get": {
        "operationId": "ForecastController_getForSKU",
        "parameters": [
          {
            "name": "skuId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/labels/{skuId}": {
      "get": {
        "operationId": "LabelController_printLabel",
        "parameters": [
          {
            "name": "skuId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/chat": {
      "post": {
        "operationId": "ChatController_query",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/chat/logs/{tenantId}": {
      "get": {
        "operationId": "ChatController_getLogs",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/scanner/{barcode}": {
      "get": {
        "operationId": "ScannerController_scan",
        "parameters": [
          {
            "name": "barcode",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "found": true,
                    "sku": {
                      "id": "sku1",
                      "name": "Filter MERV-13",
                      "barcode": "123"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "scanner"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/field-calculations": {
      "post": {
        "operationId": "FieldCalculationController_create",
        "summary": "Save a field calculation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFieldCalculationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Calculation saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldCalculationResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          }
        },
        "tags": [
          "field-calculations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "FieldCalculationController_findAll",
        "summary": "Get all field calculations",
        "parameters": [
          {
            "name": "workOrderId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of calculations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FieldCalculationResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "field-calculations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/field-calculations/technician/{technicianId}": {
      "get": {
        "operationId": "FieldCalculationController_findByTechnician",
        "summary": "Get calculations by technician",
        "parameters": [
          {
            "name": "technicianId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of calculations by technician",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FieldCalculationResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "field-calculations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/field-calculations/{id}": {
      "get": {
        "operationId": "FieldCalculationController_findOne",
        "summary": "Get a specific field calculation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Calculation found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldCalculationResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Calculation not found"
          }
        },
        "tags": [
          "field-calculations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "FieldCalculationController_delete",
        "summary": "Delete a field calculation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Calculation deleted successfully"
          },
          "404": {
            "description": "Calculation not found"
          }
        },
        "tags": [
          "field-calculations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/field-calculations/{calculationId}/attach": {
      "put": {
        "operationId": "FieldCalculationController_attachToWorkOrder",
        "summary": "Attach calculation to work order",
        "parameters": [
          {
            "name": "calculationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Calculation attached successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldCalculationResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Calculation not found"
          }
        },
        "tags": [
          "field-calculations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/notifications": {
      "get": {
        "operationId": "NotificationController_getNotifications",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/notifications/unread-count": {
      "get": {
        "operationId": "NotificationController_getUnreadCount",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/notifications/with-count": {
      "get": {
        "operationId": "NotificationController_getNotificationsWithCount",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/notifications/{id}/read": {
      "put": {
        "operationId": "NotificationController_markAsRead",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/notifications/mark-all-read": {
      "put": {
        "operationId": "NotificationController_markAllAsRead",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/notifications/{id}": {
      "delete": {
        "operationId": "NotificationController_deleteNotification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/notifications/preferences": {
      "get": {
        "operationId": "NotificationController_getPreferences",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "NotificationController_updatePreferences",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/notifications/test": {
      "post": {
        "operationId": "NotificationController_createTestNotification",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/estimator/calculate": {
      "post": {
        "operationId": "EstimatorController_calculateEstimate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEstimateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/estimator/manual": {
      "post": {
        "operationId": "EstimatorController_createManualEstimate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManualEstimateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/estimator/manual/{id}": {
      "put": {
        "operationId": "EstimatorController_updateManualEstimate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateManualEstimateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/estimator/estimates": {
      "get": {
        "operationId": "EstimatorController_listEstimates",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/estimator/estimates/{id}": {
      "get": {
        "operationId": "EstimatorController_getEstimate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "EstimatorController_deleteEstimate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/estimator/proposals": {
      "post": {
        "operationId": "EstimatorController_createProposal",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProposalDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "operationId": "EstimatorController_listProposals",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/estimator/proposals/convert/{estimateId}": {
      "post": {
        "operationId": "EstimatorController_convertEstimateToProposal",
        "parameters": [
          {
            "name": "estimateId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/estimator/proposals/{id}": {
      "put": {
        "operationId": "EstimatorController_updateProposal",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProposalDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "get": {
        "operationId": "EstimatorController_getProposal",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "EstimatorController_deleteProposal",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/service-catalog/services": {
      "get": {
        "operationId": "ServiceCatalogController_getServices",
        "summary": "Get all services in catalog",
        "parameters": [
          {
            "name": "category",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Service Catalog"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "ServiceCatalogController_createService",
        "summary": "Create new service",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Service Catalog"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/service-catalog/services/{id}": {
      "get": {
        "operationId": "ServiceCatalogController_getService",
        "summary": "Get service by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Service Catalog"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "ServiceCatalogController_updateService",
        "summary": "Update service",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Service Catalog"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ServiceCatalogController_deleteService",
        "summary": "Delete service",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Service Catalog"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/service-catalog/bundles": {
      "get": {
        "operationId": "ServiceCatalogController_getBundles",
        "summary": "Get all service bundles",
        "parameters": [
          {
            "name": "active",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Service Catalog"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "ServiceCatalogController_createBundle",
        "summary": "Create service bundle",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBundleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Service Catalog"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/service-catalog/bundles/{id}": {
      "get": {
        "operationId": "ServiceCatalogController_getBundle",
        "summary": "Get bundle by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Service Catalog"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "ServiceCatalogController_updateBundle",
        "summary": "Update service bundle",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBundleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Service Catalog"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ServiceCatalogController_deleteBundle",
        "summary": "Delete service bundle",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Service Catalog"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/service-catalog/labor-rates": {
      "get": {
        "operationId": "ServiceCatalogController_getLaborRates",
        "summary": "Get all labor rates",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Service Catalog"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "ServiceCatalogController_createLaborRate",
        "summary": "Create labor rate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLaborRateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Service Catalog"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/service-catalog/labor-rates/{id}": {
      "put": {
        "operationId": "ServiceCatalogController_updateLaborRate",
        "summary": "Update labor rate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLaborRateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Service Catalog"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ServiceCatalogController_deleteLaborRate",
        "summary": "Delete labor rate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Service Catalog"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/feedback": {
      "post": {
        "operationId": "FeedbackController_create",
        "summary": "Submit feedback",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeedbackDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "feedback"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "FeedbackController_findAll",
        "summary": "List all feedback (Admin only)",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "category",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "feedback"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/feedback/{id}": {
      "get": {
        "operationId": "FeedbackController_findOne",
        "summary": "Get feedback by ID (Admin only)",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "feedback"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "FeedbackController_update",
        "summary": "Update feedback status (Admin only)",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeedbackDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "feedback"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "FeedbackController_remove",
        "summary": "Delete feedback (Admin only)",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "feedback"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/feedback/stats/summary": {
      "get": {
        "operationId": "FeedbackController_getStats",
        "summary": "Get feedback statistics (Admin only)",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "feedback"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors": {
      "post": {
        "operationId": "VendorController_create",
        "summary": "Create new vendor",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVendorDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "vendors"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "VendorController_findAll",
        "summary": "Get all vendors",
        "parameters": [
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "PENDING_APPROVAL",
                "SUSPENDED",
                "BLACKLISTED"
              ],
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "MANUFACTURER",
                "DISTRIBUTOR",
                "WHOLESALER",
                "SERVICE_PROVIDER",
                "CONTRACTOR",
                "SUPPLIES",
                "EQUIPMENT",
                "OTHER"
              ],
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "vendors"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/stats": {
      "get": {
        "operationId": "VendorController_getStats",
        "summary": "Get vendor statistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "vendors"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{id}": {
      "get": {
        "operationId": "VendorController_findOne",
        "summary": "Get vendor by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "vendors"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "VendorController_update",
        "summary": "Update vendor",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVendorDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "vendors"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "VendorController_delete",
        "summary": "Delete vendor",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "vendors"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{id}/contacts": {
      "post": {
        "operationId": "VendorController_createContact",
        "summary": "Add contact to vendor",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVendorContactDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "vendors"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "VendorController_getContacts",
        "summary": "Get vendor contacts",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "vendors"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{id}/contacts/{contactId}": {
      "put": {
        "operationId": "VendorController_updateContact",
        "summary": "Update vendor contact",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "vendors"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "VendorController_deleteContact",
        "summary": "Delete vendor contact",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "vendors"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{id}/price-agreements": {
      "post": {
        "operationId": "VendorController_createPriceAgreement",
        "summary": "Create price agreement",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePriceAgreementDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "vendors"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "VendorController_getPriceAgreements",
        "summary": "Get vendor price agreements",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activeOnly",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "vendors"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{id}/price-agreements/{agreementId}": {
      "put": {
        "operationId": "VendorController_updatePriceAgreement",
        "summary": "Update price agreement",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "agreementId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "vendors"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "VendorController_deactivatePriceAgreement",
        "summary": "Deactivate price agreement",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "agreementId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "vendors"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{id}/performance-reviews": {
      "post": {
        "operationId": "VendorController_createPerformanceReview",
        "summary": "Create performance review",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePerformanceReviewDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "vendors"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "VendorController_getPerformanceReviews",
        "summary": "Get vendor performance reviews",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "vendors"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/properties": {
      "post": {
        "operationId": "PropertyController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePropertyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "operationId": "PropertyController_findAll",
        "parameters": [
          {
            "name": "accountId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/properties/{id}": {
      "get": {
        "operationId": "PropertyController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "PropertyController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePropertyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "PropertyController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/customer-performance": {
      "post": {
        "operationId": "CustomerPerformanceController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerPerformanceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "operationId": "CustomerPerformanceController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/customer-performance/account/{accountId}": {
      "get": {
        "operationId": "CustomerPerformanceController_findByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/customer-performance/{id}": {
      "get": {
        "operationId": "CustomerPerformanceController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "CustomerPerformanceController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerPerformanceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "CustomerPerformanceController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/customer-performance/recalculate/{accountId}": {
      "post": {
        "operationId": "CustomerPerformanceController_recalculate",
        "parameters": [
          {
            "name": "accountId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/customer-equipment": {
      "post": {
        "operationId": "CustomerEquipmentController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerEquipmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "operationId": "CustomerEquipmentController_findAll",
        "parameters": [
          {
            "name": "propertyId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/customer-equipment/{id}": {
      "get": {
        "operationId": "CustomerEquipmentController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "CustomerEquipmentController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerEquipmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "CustomerEquipmentController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "info": {
    "title": "HVAC API",
    "description": "Generated API docs",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateSkuDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "barcode": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "CreatePoDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "skuId": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          }
        },
        "required": [
          "skuId",
          "quantity"
        ]
      },
      "CreateFieldCalculationDto": {
        "type": "object",
        "properties": {
          "calculatorType": {
            "type": "string",
            "description": "Calculator type/name",
            "example": "Ohm's Law"
          },
          "category": {
            "type": "string",
            "description": "Calculator category",
            "enum": [
              "electrical",
              "refrigeration",
              "airflow",
              "gas",
              "hydronic",
              "utility"
            ],
            "example": "electrical"
          },
          "inputs": {
            "type": "object",
            "description": "Calculator input data as JSON",
            "example": {
              "voltage": 120,
              "current": 10,
              "resistance": 12
            }
          },
          "results": {
            "type": "object",
            "description": "Calculator result data as JSON",
            "example": {
              "V": 120,
              "I": 10,
              "R": 12,
              "P": 1200
            }
          },
          "workOrderId": {
            "type": "string",
            "description": "Work order ID to attach calculation to",
            "example": "wo-uuid-123"
          },
          "notes": {
            "type": "string",
            "description": "Optional notes about the calculation",
            "example": "Measured at main panel"
          }
        },
        "required": [
          "calculatorType",
          "category",
          "inputs",
          "results"
        ]
      },
      "FieldCalculationResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "technicianId": {
            "type": "string"
          },
          "calculatorType": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "inputs": {
            "type": "object"
          },
          "results": {
            "type": "object"
          },
          "workOrderId": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "isAttached": {
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "technician": {
            "type": "object"
          },
          "workOrder": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "tenantId",
          "technicianId",
          "calculatorType",
          "category",
          "inputs",
          "results",
          "isAttached",
          "createdAt",
          "updatedAt",
          "technician"
        ]
      },
      "CreateEstimateDto": {
        "type": "object",
        "properties": {}
      },
      "CreateManualEstimateDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateManualEstimateDto": {
        "type": "object",
        "properties": {}
      },
      "CreateProposalDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateProposalDto": {
        "type": "object",
        "properties": {}
      },
      "CreateServiceDto": {
        "type": "object",
        "properties": {
          "serviceCode": {
            "type": "string"
          },
          "serviceName": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "subcategory": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "pricingType": {
            "type": "string",
            "default": "flat_rate"
          },
          "basePrice": {
            "type": "number"
          },
          "minPrice": {
            "type": "number"
          },
          "maxPrice": {
            "type": "number"
          },
          "estimatedHours": {
            "type": "number"
          },
          "laborRateOverride": {
            "type": "number"
          },
          "skillLevelRequired": {
            "type": "string"
          },
          "durationMinutes": {
            "type": "number"
          },
          "warrantyDays": {
            "type": "number"
          },
          "requiresPermit": {
            "type": "boolean"
          },
          "isEmergency": {
            "type": "boolean"
          },
          "includedParts": {
            "type": "object"
          },
          "recommendedParts": {
            "type": "object"
          },
          "isActive": {
            "type": "boolean"
          },
          "isSeasonalService": {
            "type": "boolean"
          },
          "availableSeasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "internalNotes": {
            "type": "string"
          },
          "customerFacingNotes": {
            "type": "string"
          },
          "displayOrder": {
            "type": "number"
          }
        },
        "required": [
          "serviceCode",
          "serviceName",
          "category",
          "pricingType",
          "basePrice"
        ]
      },
      "UpdateServiceDto": {
        "type": "object",
        "properties": {
          "serviceCode": {
            "type": "string"
          },
          "serviceName": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "subcategory": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "pricingType": {
            "type": "string",
            "default": "flat_rate"
          },
          "basePrice": {
            "type": "number"
          },
          "minPrice": {
            "type": "number"
          },
          "maxPrice": {
            "type": "number"
          },
          "estimatedHours": {
            "type": "number"
          },
          "laborRateOverride": {
            "type": "number"
          },
          "skillLevelRequired": {
            "type": "string"
          },
          "durationMinutes": {
            "type": "number"
          },
          "warrantyDays": {
            "type": "number"
          },
          "requiresPermit": {
            "type": "boolean"
          },
          "isEmergency": {
            "type": "boolean"
          },
          "includedParts": {
            "type": "object"
          },
          "recommendedParts": {
            "type": "object"
          },
          "isActive": {
            "type": "boolean"
          },
          "isSeasonalService": {
            "type": "boolean"
          },
          "availableSeasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "internalNotes": {
            "type": "string"
          },
          "customerFacingNotes": {
            "type": "string"
          },
          "displayOrder": {
            "type": "number"
          }
        }
      },
      "BundleItemDto": {
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "default": 1
          },
          "displayOrder": {
            "type": "number"
          }
        },
        "required": [
          "serviceId",
          "quantity"
        ]
      },
      "CreateBundleDto": {
        "type": "object",
        "properties": {
          "bundleCode": {
            "type": "string"
          },
          "bundleName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "bundlePrice": {
            "type": "number"
          },
          "regularPrice": {
            "type": "number"
          },
          "savings": {
            "type": "number"
          },
          "savingsPercent": {
            "type": "number"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPromotional": {
            "type": "boolean"
          },
          "displayOrder": {
            "type": "number"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BundleItemDto"
            }
          }
        },
        "required": [
          "bundleCode",
          "bundleName",
          "bundlePrice",
          "regularPrice",
          "savings",
          "savingsPercent",
          "items"
        ]
      },
      "CreateLaborRateDto": {
        "type": "object",
        "properties": {
          "rateName": {
            "type": "string"
          },
          "rateType": {
            "type": "string"
          },
          "skillLevel": {
            "type": "string"
          },
          "hourlyRate": {
            "type": "number"
          },
          "isDefault": {
            "type": "boolean"
          },
          "afterHoursMultiplier": {
            "type": "number"
          },
          "isActive": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "rateName",
          "rateType",
          "hourlyRate"
        ]
      },
      "CreateFeedbackDto": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "enum": [
              "bug",
              "feature_request",
              "complaint",
              "praise",
              "other"
            ]
          },
          "rating": {
            "type": "number",
            "minimum": 1,
            "maximum": 5
          },
          "message": {
            "type": "string"
          },
          "contactEmail": {
            "type": "string"
          },
          "userAgent": {
            "type": "string"
          },
          "pageUrl": {
            "type": "string"
          }
        },
        "required": [
          "category",
          "message"
        ]
      },
      "UpdateFeedbackDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "new",
              "reviewed",
              "in_progress",
              "resolved",
              "dismissed"
            ]
          },
          "adminNotes": {
            "type": "string"
          }
        }
      },
      "CreateVendorDto": {
        "type": "object",
        "properties": {
          "vendorCode": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "MANUFACTURER",
              "DISTRIBUTOR",
              "WHOLESALER",
              "SERVICE_PROVIDER",
              "CONTRACTOR",
              "SUPPLIES",
              "EQUIPMENT",
              "OTHER"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_APPROVAL",
              "SUSPENDED",
              "BLACKLISTED"
            ]
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "taxId": {
            "type": "string"
          },
          "paymentTerms": {
            "type": "string"
          },
          "creditLimit": {
            "type": "number"
          },
          "isPreferred": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "notes": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "vendorCode",
          "companyName",
          "type"
        ]
      },
      "UpdateVendorDto": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_APPROVAL",
              "SUSPENDED",
              "BLACKLISTED"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "MANUFACTURER",
              "DISTRIBUTOR",
              "WHOLESALER",
              "SERVICE_PROVIDER",
              "CONTRACTOR",
              "SUPPLIES",
              "EQUIPMENT",
              "OTHER"
            ]
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "taxId": {
            "type": "string"
          },
          "paymentTerms": {
            "type": "string"
          },
          "creditLimit": {
            "type": "number"
          },
          "rating": {
            "type": "number"
          },
          "qualityRating": {
            "type": "number"
          },
          "deliveryRating": {
            "type": "number"
          },
          "serviceRating": {
            "type": "number"
          },
          "isPreferred": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "CreateVendorContactDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "isPrimary": {
            "type": "boolean"
          },
          "notes": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName"
        ]
      },
      "CreatePriceAgreementDto": {
        "type": "object",
        "properties": {
          "skuId": {
            "type": "string"
          },
          "vendorPartNumber": {
            "type": "string"
          },
          "unitPrice": {
            "type": "number"
          },
          "minimumOrderQty": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "effectiveDate": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string"
          },
          "contractNumber": {
            "type": "string"
          },
          "leadTimeDays": {
            "type": "number"
          },
          "isActive": {
            "type": "boolean"
          },
          "notes": {
            "type": "string"
          }
        },
        "required": [
          "skuId",
          "unitPrice",
          "effectiveDate"
        ]
      },
      "CreatePerformanceReviewDto": {
        "type": "object",
        "properties": {
          "reviewDate": {
            "type": "string"
          },
          "reviewPeriodStart": {
            "type": "string"
          },
          "reviewPeriodEnd": {
            "type": "string"
          },
          "qualityRating": {
            "type": "number"
          },
          "deliveryRating": {
            "type": "number"
          },
          "serviceRating": {
            "type": "number"
          },
          "pricingRating": {
            "type": "number"
          },
          "comments": {
            "type": "string"
          }
        },
        "required": [
          "reviewDate",
          "reviewPeriodStart",
          "reviewPeriodEnd",
          "qualityRating",
          "deliveryRating",
          "serviceRating",
          "pricingRating"
        ]
      },
      "CreatePropertyDto": {
        "type": "object",
        "properties": {}
      },
      "UpdatePropertyDto": {
        "type": "object",
        "properties": {}
      },
      "CreateCustomerPerformanceDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateCustomerPerformanceDto": {
        "type": "object",
        "properties": {}
      },
      "CreateCustomerEquipmentDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateCustomerEquipmentDto": {
        "type": "object",
        "properties": {}
      }
    }
  }
}